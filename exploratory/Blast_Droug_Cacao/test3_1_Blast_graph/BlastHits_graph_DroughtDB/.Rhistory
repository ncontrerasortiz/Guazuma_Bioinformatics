getwd
getwd()
results_Blast_COSSHPPI_IS_KZ0AA_fixed <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_COSSHPPI_IS_KZ0AA_fixed.csv")
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
results_Blast_DROUGHTRS_KZ0ACAE <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_DROUGHTRS_KZ0ACAE.csv")
View(results_Blast_DROUGHTRS_KZ0ACAE)
results_Blast_LEAVES_KZ0ABE <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LEAVES_KZ0ABE.csv")
View(results_Blast_LEAVES_KZ0ABE)
results_Blast_LEAVPAGU_KZ0ACQ <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LEAVPAGU_KZ0ACQ.csv")
View(results_Blast_LEAVPAGU_KZ0ACQ)
results_Blast_LEPAPNGR_KZ0ACP <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LEPAPNGR_KZ0ACP.csv")
View(results_Blast_LEPAPNGR_KZ0ACP)
results_Blast_LESSHPNGRSb_KZ0ABP <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LESSHPNGRSb_KZ0ABP.csv")
View(results_Blast_LESSHPNGRSb_KZ0ABP)
results_Blast_test2_1_CDS_CriolloV2 <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_test2_1_CDS_CriolloV2.csv")
View(results_Blast_test2_1_CDS_CriolloV2)
View(results_Blast_test2_1_CDS_CriolloV2)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_Blast_test2_1_CDS_CriolloV2)
View(results_Blast_test2_1_CDS_CriolloV2)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
summary(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
class(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
library(compare)
install.packages(compare)
install.packages(compare)
install.packages("compare")
library(compare)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_DROUGHTRS_KZ0ACAE)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_COSSHPPI_IS_KZ0AA_fixed)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_LEAVES_KZ0ABE)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_LEAVES_KZ0ABE)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_LEAVPAGU_KZ0ACQ)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_LEPAPNGR_KZ0ACP)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_LESSHPNGRSb_KZ0ABP)
compare(help)
help("compare")
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_LESSHPNGRSb_KZ0ABP, compName=T)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed, results_Blast_LESSHPNGRSb_KZ0ABP, compName)
compareName(results_Blast_COSSHPPI_IS_KZ0AA_fixed,results_Blast_DROUGHTRS_KZ0ACAE)
compareName(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
compareName(results_Blast_COSSHPPI_IS_KZ0AA_fixed, compName = results_Blast_DROUGHTRS_KZ0ACAE)
compareName(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, compName = results_Blast_DROUGHTRS_KZ0ACAE$Query)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, results_Blast_LESSHPNGRSb_KZ0ABP$Query)
compare(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, results_Blast_LESSHPNGRSb_KZ0ABP$Query, ignoreNames = T)
install.packages("stringr")
q
install.packages("stringr")
library(stringr)
str_split_fixed()
help("stringr")
?str_split_fixed
str_split_fixed(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, " ", 1)
view(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
Blast_COSSHPPI_IS_KZ0AA_fixed<-str_split_fixed(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, " ", 1)
View(Blast_COSSHPPI_IS_KZ0AA_fixed)
Blast_COSSHPPI_IS_KZ0AA_fixed<-str_split_fixed(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, " ", 4)
View(Blast_COSSHPPI_IS_KZ0AA_fixed)
Blast_COSSHPPI_IS_KZ0AA_fixed<-str_split_fixed(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, " ")
Blast_COSSHPPI_IS_KZ0AA_fixed<-str_split_fixed(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, " ", inf)
Blast_COSSHPPI_IS_KZ0AA_fixed<-str_split_fixed(results_Blast_COSSHPPI_IS_KZ0AA_fixed$Query, " ", Inf)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
results_Blast_test2_1_CDS_CriolloV2 <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_test2_1_CDS_CriolloV2.csv")
View(results_Blast_test2_1_CDS_CriolloV2)
results_Blast_LESSHPNGRSb_KZ0ABP <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LESSHPNGRSb_KZ0ABP.csv")
View(results_Blast_LESSHPNGRSb_KZ0ABP)
results_Blast_LEPAPNGR_KZ0ACP <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LEPAPNGR_KZ0ACP.csv")
View(results_Blast_LEPAPNGR_KZ0ACP)
results_Blast_LEAVPAGU_KZ0ACQ <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LEAVPAGU_KZ0ACQ.csv")
View(results_Blast_LEAVPAGU_KZ0ACQ)
results_Blast_LEAVES_KZ0ABE <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_LEAVES_KZ0ABE.csv")
View(results_Blast_LEAVES_KZ0ABE)
results_Blast_DROUGHTRS_KZ0ACAE <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_DROUGHTRS_KZ0ACAE.csv")
View(results_Blast_DROUGHTRS_KZ0ACAE)
results_Blast_COSSHPPI_IS_KZ0AA_fixed <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/results_Blast_COSSHPPI_IS_KZ0AA_fixed.csv")
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
barplot(height = results_Blast_test2_1_CDS_CriolloV2$Number.of.hits, names.arg = results_Blast_test2_1_CDS_CriolloV2$Query)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_Blast_DROUGHTRS_KZ0ACAE)
View(results_Blast_DROUGHTRS_KZ0ACAE)
View(results_Blast_LEAVES_KZ0ABE)
View(results_Blast_LEAVES_KZ0ABE)
View(results_Blast_LEAVPAGU_KZ0ACQ)
View(results_Blast_LEAVPAGU_KZ0ACQ)
View(results_Blast_LEPAPNGR_KZ0ACP)
View(results_Blast_LEPAPNGR_KZ0ACP)
View(results_Blast_LESSHPNGRSb_KZ0ABP)
View(results_Blast_LESSHPNGRSb_KZ0ABP)
View(results_Blast_test2_1_CDS_CriolloV2)
View(results_Blast_test2_1_CDS_CriolloV2)
library("ggplot2")
install.packages("ggplot2")
install.packages("tidyverse")
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
install.packages("tidyverse")
library(tidyverse)
library("tidyverse")
installed.packages(tidyverse)
installed.packages("tidyverse")
#Merging the dataframes
library("dplyr")
test1<-bind_rows(results_Blast_COSSHPPI_IS_KZ0AA_fixed,results_Blast_DROUGHTRS_KZ0ACAE)
View(test1)
results_blast7<-bind_rows(results_Blast_COSSHPPI_IS_KZ0AA_fixed,results_Blast_DROUGHTRS_KZ0ACAE,results_Blast_LEAVES_KZ0ABE, results_Blast_LEAVES_KZ0ABE, results_Blast_LEAVPAGU_KZ0ACQ, results_Blast_LEPAPNGR_KZ0ACP, results_Blast_LESSHPNGRSb_KZ0ABP, results_Blast_test2_1_CDS_CriolloV2)
View(test1)
View(results_blast7)
summary(results_blast7)
library(plyr)
results_blast7 %>% count(Dataset)
View(results_Blast_LEAVES_KZ0ABE)
View(results_Blast_COSSHPPI_IS_KZ0AA_fixed)
View(results_blast7)
results_Blast_COSSHPPI_IS_KZ0AA_fixed %>% count(Dataset)
results_Blast_DROUGHTRS_KZ0ACAE %>% count(Dataset)
results_Blast_LEAVES_KZ0ABE %>% count(Dataset)
results_Blast_test2_1_CDS_CriolloV2 %>% count(Dataset)
results_blast7 %>% count(Dataset)
class(results_blast7)
summary(results_blast7)
results_blast7$Dataset
summary(results_blast7$Dataset)
summary(results_Blast_LEAVES_KZ0ABE$Dataset)
summary(results_Blast_LEAVPAGU_KZ0ACQ$Dataset)
results_blast7<-bind_rows(results_Blast_COSSHPPI_IS_KZ0AA_fixed,
results_Blast_DROUGHTRS_KZ0ACAE,results_Blast_LEAVES_KZ0ABE,
results_Blast_LEPAPNGR_KZ0ACP, results_Blast_LESSHPNGRSb_KZ0ABP,
results_Blast_test2_1_CDS_CriolloV2)
summary(results_blast7)
results_blast7 %>% count(Dataset)
summary(results_Blast_LEAVPAGU_KZ0ACQ)
results_blast7<-bind_rows(results_Blast_COSSHPPI_IS_KZ0AA_fixed,
results_Blast_DROUGHTRS_KZ0ACAE,results_Blast_LEAVES_KZ0ABE,
results_Blast_LEPAPNGR_KZ0ACP, results_Blast_LESSHPNGRSb_KZ0ABP,
results_Blast_test2_1_CDS_CriolloV2)
summary(results_blast7)
results_blast7 %>% count(Dataset)
results_blast6<-bind_rows(results_Blast_COSSHPPI_IS_KZ0AA_fixed,
results_Blast_DROUGHTRS_KZ0ACAE,results_Blast_LEAVES_KZ0ABE,
results_Blast_LEPAPNGR_KZ0ACP, results_Blast_LESSHPNGRSb_KZ0ABP,
results_Blast_test2_1_CDS_CriolloV2)
summary(results_blast6)
results_blast6 %>% count(Dataset) #count observations by group (194 sequences per dataset)
ggplot(results)
View(results_blast6)
ggplot(results_blast6, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity")
#graph a grouped barplot
library("ggplot2")
ggplot(results_blast6, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity")
ggplot(results_blast6, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity")
ggplot(results_blast6, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity")
ggplot(results_blast6, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity")
#stack bar plot, saves more space
p1<-ggplot(results_blast6, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity")
p1 + theme(axis.text.x = element_text(angle = 90, hjust = 1) )
p1 + theme(axis.text.x = element_text(angle = 90) )
#stack bar plot, saves more space
p1<-ggplot(results_blast6, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity")
p1 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
results_Blast_DROUGHTLS_KZ0ACAF <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/nuevas/results_Blast_DROUGHTLS_KZ0ACAF.csv")
View(results_Blast_DROUGHTLS_KZ0ACAF)
results_Blast_LEAVPAGU_KZ0ACQ <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/nuevas/results_Blast_LEAVPAGU_KZ0ACQ.csv")
View(results_Blast_LEAVPAGU_KZ0ACQ)
results_Blast_LESSHMEPNGa_KZ0ACAP <- read.csv("/media/storage/OneDrive - University of Edinburgh/onedrive_storage/Guazuma/Genomics/Bait_design/notebook_jup/test3_1_Blast_graph/nuevas/results_Blast_LESSHMEPNGa_KZ0ACAP.csv")
View(results_Blast_LESSHMEPNGa_KZ0ACAP)
View(results_Blast_LEPAPNGR_KZ0ACP)
read.csv(results_Blast_RPPSSHPNGb_KZ0ACR.csv)
read.csv(results_Blast_RPPSSHPNGb_KZ0ACR.csv)
read.csv(results_Blast_RPPSSHPNGb_KZ0ACR.csv)
read.csv(results_Blast_RPPSSHPNGb_KZ0ACR.csv)
read.csv(results_Blast_RPPSSHPNGb_KZ0ACR.csv)
pwd
getwd()
read.csv(results_Blast_RPPSSHPNGb_KZ0ACR.csv)
read.csv("results_Blast_RPPSSHPNGb_KZ0ACR.csv")
KZ0ACR<- read.csv("results_Blast_RPPSSHPNGb_KZ0ACR.csv")
KZ0ACR<-read.csv("results_Blast_RPPSSHPNGb_KZ0ACR.csv")
KZ0ACAL<-read.csv("results_Blast_RPPSSHPNGa_KZ0ACAL.csv")
KZ0ACAD<-read.csv("results_Blast_MIRIDUFS_KZ0ACAD.csv")
KZ0ACV<- read.csv("results_Blast_LESSHMEPNGb_KZ0ACV.csv")
KZ0ACAP<-read.csv("results_Blast_LESSHMEPNGa_KZ0ACAP.csv")
KZ0ACAN<-read.csv("results_Blast_SSHMIRUFa_KZ0ACAN.csv")
KZ0ACB<-read.csv("results_Blast_STSSHWB2Sb_KZ0ACB.csv")
KZ0ACQ<-read.csv("results_Blast_LEAVPAGU_KZ0ACQ.csv")
KZ0ACT<-read.csv("results_Blast_SSHMIRUFb_KZ0ACT.csv")
KZ0ABI_K<-read.csv("results_Blast_STSSHWB1S_KZ0ABI_K.csv")
KZ0ACAF<-read.csv("results_Blast_DROUGHTLS_KZ0ACAF.csv")
CDS_CriolloV2<-read.csv("results_Blast_test2_1_CDS_CriolloV2.csv")
KZ0ABP<-read.csv("results_Blast_LESSHPNGRSb_KZ0ABP.csv")
KZ0ACP<-read.csv("results_Blast_LEPAPNGR_KZ0ACP.csv")
KZ0ABE<-read.csv("results_Blast_LEAVES_KZ0ABE.csv")
KZ0ACAE<-read.csv("results_Blast_DROUGHTRS_KZ0ACAE.csv")
KZ0AA<-read.csv("results_Blast_COSSHPPI_IS_KZ0AA_fixed.csv")
KZ0AC_fixed<-read.csv("results_Blast_RESSHMEPNGb_KZ0AC_fixed.csv")
View(KZ0AC_fixed)
#Merging the dataframes and creating the dataset
library("dplyr")
results_blast18<-bind_rows(KZ0ACR,
KZ0ACAL,
KZ0ACAD,
KZ0ACV,
KZ0ACAP,
KZ0ACAN,
KZ0ACB,
KZ0ACQ,
KZ0ACT,
KZ0ABI_K,
KZ0ACAF,
CDS_CriolloV2,
KZ0ABP,
KZ0ACP,
KZ0ABE,
KZ0ACAE,
KZ0AA,
KZ0AC_fixed)
summary(results_blast18)
results_blast6 %>% count(Dataset) #count observations by group (194 sequences per dataset)
results_blast18 %>% count(Dataset) #count observations by group (194 sequences per dataset)
#graph a grouped barplot
library("ggplot2")
#stack bar plot, saves more space
p1<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity")
p1 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p1 + scale_color_brewer(palette = "Dark2")
#stack bar plot, saves more space
p1<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity")
p1 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p1 + scale_color_brewer(palette = "Dark2")
p1 + scale_color_brewer(palette = "Set3")
#stack bar plot, saves more space
p1<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity")
p1 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p1 + scale_color_brewer(palette = "Set3")
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity")
p2 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#Merging the dataframes and creating the dataset
library("dplyr")
results_blast17<-bind_rows(KZ0ACR, #dataset without the genome
KZ0ACAL,
KZ0ACAD,
KZ0ACV,
KZ0ACAP,
KZ0ACAN,
KZ0ACB,
KZ0ACQ,
KZ0ACT,
KZ0ABI_K,
KZ0ACAF,
KZ0ABP,
KZ0ACP,
KZ0ABE,
KZ0ACAE,
KZ0AA,
KZ0AC_fixed)
summary(results_blast17)
results_blast17 %>% count(Dataset) #count observations by group (194 sequences per dataset)
#graph a grouped barplot
library("ggplot2")
p3<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity")
p3<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity")
p3 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p3 + scale_color_brewer(palette = "Set3")
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity")
p4 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p4 + scale_color_brewer(palette = "Set3")
p5<-ggplot(CDS_CriolloV2, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity") #stack: bars arrange one on top of the other
p5 + theme(axis.text.x = element_text(angle = 90, hjust = 1) )
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity") #stack: bars arrange one on top of the other
p4 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p4 + scale_colour_brewer(palette = "Set3,2,1")
p4 + scale_colour_brewer(palette = "Set3")
p4 + scale_colour_brewer(palette = "Set1", "set2")
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="Set1") #stack: bars arrange one on top of the other
p4 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="blue") #stack: bars arrange one on top of the other
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="blue") #stack: bars arrange one on top of the other
p4 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p4 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p4 + scale_colour_brewer(palette = "Set1")
p4 + scale_fill_brewer(palette = "Set1")
p4 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p4 + scale_fill_brewer(palette = "Set1")
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p4 + scale_fill_brewer(palette = "Set1") + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
library(RColorBrewer)
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity", color="black") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = "Set3")
+ theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = "Set3")
+ theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = "Set3") + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = "Set3", "Set2", "Set1") + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = "Set3", "Set2")
+ theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p2 + scale_fill_brewer(palette = "Set3", "Set2") + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = "Paired") + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#CReate color palette to get as many as 18 colors
getPalette= colorRampPalette(brewer.pal(9,"Paired"))
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = "getPalette") + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + scale_fill_brewer(palette = getPalette) + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#CReate color palette to get as many as 18 colors
colorCount= length(unique(results_blast18$Dataset))
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=getPalette(colorCount), y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=getPalette(colorCount), y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#CReate color palette to get as many as 18 colors
colorCount= length(unique(results_blast18$Dataset))
getPalette= colorRampPalette(brewer.pal(18,"Paired"))
#stack bar plot, saves more space
p2<-ggplot(results_blast18, aes(fill=getPalette(colorCount), y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity") #dodge: individual bars for each library
p2 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p1<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p1 + scale_fill_brewer(palette = getPalette(colorCount))
+ theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#CReate color palette to get as many as 18 colors
colorCount= length(unique(results_blast18$Dataset))
getPalette= colorRampPalette(brewer.pal(18,"Set1"))
#CReate color palette to get as many as 18 colors
colorCount= length(unique(results_blast18$Dataset))
getPalette= colorRampPalette(brewer.pal(9,"Set1"))
p1<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p1 + scale_fill_brewer(palette = getPalette(colorCount))
p1<-ggplot(results_blast18, aes(fill=getPalette(colorCount), y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p1 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
P6<-ggplot(results_blast18) +
geom_histogram(aes(Dataset), fill=getPalette(colorCount)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
P6<-ggplot(results_blast18) +
geom_histogram(aes(Dataset), fill=getPalette(colorCount)) +
theme(legend.position = "right")
p6
P6
p1<-ggplot(results_blast18, aes(fill=getPalette(colorCount), y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p1 + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
getPalette
p1<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p1 + scale_fill_manual(values = getPalette(colorCount))
+ theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p1<-ggplot(results_blast18, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p1 + scale_fill_manual(values = getPalette(colorCount)) + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#CReate color palette to get as many as 18 colors
colorCount2= length(unique(results_blast17$Dataset))
getPalette2= colorRampPalette(brewer.pal(9,"Set1"))
p4<-ggplot(results_blast17, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p4 + scale_fill_manual(values = getPalette2(colorCount2)) + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
View(results_blast17)
results_blastEST_hits<-subset(results_blast17, Number.of.hits > 0)
View(results_blastEST_hits)
#Data frame with sequences containing other than zero (0) hits
colorCount3= length(unique(results_blastEST_hits$Dataset))
getPalette3= colorRampPalette(brewer.pal(9,"Set1"))
p7<-ggplot(results_blastEST_hits, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p7 + scale_fill_manual(values = getPalette3(colorCount3)) + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
#Data frame with sequences containing other than zero (0) hits
colorCount3= length(unique(results_blastEST_hits$Dataset))
getPalette3= colorRampPalette(brewer.pal(12,"Paired"))
colorCount3= length(unique(results_blastEST_hits$Dataset)) #extend color palette
getPalette3= colorRampPalette(brewer.pal(12,"Paired"))
p7<-ggplot(results_blastEST_hits, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p7 + scale_fill_manual(values = getPalette3(colorCount3)) + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
p8<-ggplot(results_blastEST_hits, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "dodge", stat = "identity", color="black") #stack: bars arrange one on top of the other
p8 + scale_fill_manual(values = getPalette3(colorCount3)) + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
results_blast18_hits<-subset(results_blast18, Number.of.hits > 0) #subset of query with number of hits bigger than 0
colorCount4= length(unique(results_blast18_hits$Dataset)) #extend color palette
getPalette4= colorRampPalette(brewer.pal(12,"Paired"))
p9<-ggplot(results_blast18_hits, aes(fill=Dataset, y=Number.of.hits, x=Query)) +
geom_bar(position = "stack", stat = "identity", color="black") #stack: bars arrange one on top of the other
p9 + scale_fill_manual(values = getPalette4(colorCount4)) + theme(axis.text.x = element_text(angle = 90, hjust = 1) ) #rotate and adjust x axis text
install.packages(c("boot", "class", "cluster", "lattice", "MASS", "Matrix", "mgcv", "nlme", "pillar", "survival", "tibble"))
install.packages(c("boot", "class", "cluster", "lattice", "MASS", "Matrix", "mgcv", "nlme", "pillar", "survival", "tibble"))
install.packages(c("boot", "class", "cluster", "lattice", "MASS", "Matrix", "mgcv", "nlme", "pillar", "survival", "tibble"))
install.packages(c("boot", "class", "cluster", "lattice", "MASS", "Matrix", "mgcv", "nlme", "pillar", "survival", "tibble"))
install.packages(c("boot", "class", "cluster", "lattice", "MASS", "Matrix", "mgcv", "nlme", "pillar", "survival", "tibble"))
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
IRkernel::installspec(user = FALSE)
